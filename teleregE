class Person:
    def __init__(self, efternamn, förnamn, telefonnummer, epost, adress):
        self.efternamn = efternamn
        self.förnamn = förnamn
        self.telefonnummer = telefonnummer
        self.epost = epost
        self.adress = adress

    def __str__(self):
        return f"{self.efternamn};{self.förnamn};{self.telefonnummer};{self.epost};{self.adress}"

class Register:
    def __init__(self):
        """En konstruktor som skapar en tom dictionary."""
        self.Personer = {}

    def läs_från_fil(self):
        while True:
            try:
                with open("telereg.txt", "r", encoding="utf-8") as teleregfil:
                    for line in teleregfil:
                        r = line.split(";")
                        ny = Person(r[0], r[1], r[2], r[3], r[4].strip())
                        self.Personer[f"{ny.förnamn} {ny.efternamn}"] = ny
                        self.Personer[ny.telefonnummer] = ny
                        self.Personer[ny.epost] = ny
                    break

            except FileNotFoundError:
                print(f"Det finns inte någon textfil: '{teleregfil}'.\nOBS! Inmatningen ska ske med ändelsen: '.txt'")
                continue

    def spara(self):
        with open("telereg.txt", "w", encoding="utf-8") as teleregfil:
            uniqueValues = set(self.Personer.values())
            for value in uniqueValues:
                teleregfil.write('%s\n' % value)

    def lägg_till(self, personer):
        print("Lägg till nytt objekt.")
        efternamn = input("Ange efternamn: ")
        förnamn = input("Ange förnamn: ")
        telefonnummer = input("Ange telefonnummer: ")
        epost = input("Ange epost: ")
        adress = input("Ange adress: ")
        ny = Person(efternamn, förnamn, telefonnummer, epost, adress)
        personer[f"{ny.förnamn} {ny.efternamn}"] = ny
        personer[telefonnummer] = ny
        personer[epost] = ny
        print(f"Nu är {ny.förnamn} {ny.efternamn} tillagd.")

    def ta_bort(self, personer):
        namn = input("För vilket objekt önskas det att byta attributet 'epost'? Ange först förnamn och sedan efternamn: ")
        person = personer[namn]
        del personer[namn]
        telefonnummer = person.telefonnummer
        del personer[telefonnummer]
        epost = person.epost
        del personer[epost]
        print(f"Nu är {namn} borttagen")

    def ändra_telefonnummer(self, personer):
        namn = input("För vilket objekt önskas det att byta attributet 'telefonnummer'? Ange först förnamn och sedan efternamn: ")
        person = personer[namn]
        del personer[person.telefonnummer]
        person.telefonnummer = input(f"Ange det nya telefonnumret för {namn}: ")
        personer[person.telefonnummer] = person
        print(f"Nu är telefonnumret för {namn} bytt till {person.telefonnummer}")

    def ändra_epost(self, personer):
        namn = input("För vilket objekt önskas det att byta attributet 'epost'? Ange först förnamn och sedan efternamn: ")
        person = personer[namn]
        del personer[person.epost]
        person.epost = input(f"Ange det nya epost för {namn}: ")
        personer[person.epost] = person
        print(f"Nu är epostadressen för {namn} bytt till {person.epost}")

    def ändra_adress(self, personer):
        namn = input("För vilket objekt önskas det att byta attributet 'adress'? Ange först förnamn och sedan efternamn: ")
        person = personer[namn]
        person.adress = input((f"Ange den nya adressen för {namn}: "))
        print(f"Nu är adressen för {namn} bytt till {person.adress}")

    def skriv_ut(self, personer):
        """sorterar efter personens efternamn"""
        lista = []
        delad_lista = []
        uniqueValues = set(personer.values())
        for value in uniqueValues:
            lista.append(f"{value.förnamn};{value.efternamn}")

        for item in lista:
            delad_lista.append(item.split(";"))
        lista = []

        print(f"{'Efternamn' : <15}{'Förnamn' : <15}{'Telefonnummer' : <20}{'Epost' : <40}{'Adress' : <40}")
        print("===============================================================================================================")
        for item in sorted(delad_lista, key=lambda x: x[-1]):
            lista.append(' '.join(item))
            person = personer[f"{item[0]} {item[1]}"]
            print(f"{person.efternamn: <15}{person.förnamn : <15}{person.telefonnummer : <20}{person.epost : <40}{person.adress : <40}")

def meny(personer):
    register = Register()
    while True:
        try:
            val = input("Vill du lägga till (l), ändra (ä), ta bort (t) ett objekt? eller vill du skriva ut alla objekt? (s)   För att avsluta (A) ")
            if val == "l":
                register.lägg_till(personer)
                break
            elif val == "ä":
                ändra(personer)
                break
            elif val == "t":
                register.ta_bort(personer)
                break
            elif val == "s":
                register.skriv_ut(personer)
                break
            elif val == "A":
                quit()
        except:
            if val == "A":
                quit()
            print("Vänligen ange ett av alternativen. (l), (ä), (t), (s)")
            continue

def ändra(personer):
    register = Register()
    while True:
        try:
            val = input("Vill du ändra telefonnummer (t), epost (e) eller adress (a)? ")
            if val == "t":
                register.ändra_telefonnummer(personer)
                break
            elif val == "e":
                register.ändra_epost(personer)
                break
            elif val == "a":
                register.ändra_adress(personer)
                break
        except:
            print("Vänligen ange ett av alternativen. (t), (e), (s)")
            continue

def huvudprogram():
    register = Register()
    register.läs_från_fil()
    personer = register.Personer
    while True:
        meny(personer)
        register.spara()

huvudprogram()
